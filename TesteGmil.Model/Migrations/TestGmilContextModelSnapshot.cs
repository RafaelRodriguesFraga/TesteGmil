// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteGmil.Model.Context;

#nullable disable

namespace TesteGmil.Model.Migrations
{
    [DbContext(typeof(TestGmilContext))]
    partial class TestGmilContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TesteGmil.Model.Models.Artist", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Artists", (string)null);
                });

            modelBuilder.Entity("TesteGmil.Model.Models.ArtistMusic", b =>
                {
                    b.Property<string>("ArtistId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("MusicId")
                        .HasColumnType("varchar(36)");

                    b.HasKey("ArtistId", "MusicId");

                    b.HasIndex("MusicId");

                    b.ToTable("ArtistMusic");
                });

            modelBuilder.Entity("TesteGmil.Model.Models.Genre", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Genres", (string)null);
                });

            modelBuilder.Entity("TesteGmil.Model.Models.Music", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenreId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Musics", (string)null);
                });

            modelBuilder.Entity("TesteGmil.Model.Models.ArtistMusic", b =>
                {
                    b.HasOne("TesteGmil.Model.Models.Artist", "Artist")
                        .WithMany("ArtistMusics")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TesteGmil.Model.Models.Music", "Music")
                        .WithMany("ArtistMusics")
                        .HasForeignKey("MusicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Music");
                });

            modelBuilder.Entity("TesteGmil.Model.Models.Music", b =>
                {
                    b.HasOne("TesteGmil.Model.Models.Genre", "Genre")
                        .WithMany("Musics")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("TesteGmil.Model.Models.Artist", b =>
                {
                    b.Navigation("ArtistMusics");
                });

            modelBuilder.Entity("TesteGmil.Model.Models.Genre", b =>
                {
                    b.Navigation("Musics");
                });

            modelBuilder.Entity("TesteGmil.Model.Models.Music", b =>
                {
                    b.Navigation("ArtistMusics");
                });
#pragma warning restore 612, 618
        }
    }
}
